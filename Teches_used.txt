JWT - JSON Web Tokens for authentication

Header: Encryption algorithm, and type
Payload: Info including user details, expiry date and so on.
Secret: Encode or hash by using the algorithm, stored on the server side (no client side)

Token Authentication
	
	Client sends Username and Password to the server
	Server validates and sends back JWT
	Client sends JWT for further requests
	Server validates JWT and sends back response to the client


Display contents to only authorised users

	Data Annotation [AllowAnonymous] allows any user to see the contents.

	How to test?
		Login then get the token
		Open postman and put Authorization in key section and "Bearer token_you_got_from_login"
			- Make sure there's 1 space inbetween Bearer and your token

How to switch app environment?

	in launchSettings.json, change environment to either "Development" or "Production"

Global Exception handling

	Refer to Helpers -> Extensions.cs file and go to Startup.cs file's Configure method

Client side global exception handling (Angular in my case)

	HttpInterceptor: Refer to _services -> error.interceptor.ts file and app.module.ts

To add Alertify JS

	1. install with the command inside the Angular application:
		
		npm install alertifyjs --save

	2. Go to angular.json and add alertifyjs.min.js into scripts (copy relative path of alertifyjs.min.js from build)

	3. Add 2 lines of import code in Angular app's styles.css

		@import '../node_modules/alertifyjs/build/css/alertify.min.css';
		@import '../node_modules/alertifyjs/build/css/themes/bootstrap.min.css';
	
To make use of Alertify JS

	Create a new service called alertify in _services directory
	Add AlertifyService into app.module.ts

Improve token handling by utilising Angular JWT

	Go to https://github.com/auth0/angular2-jwt
	Install with the command
		npm install @auth0/angular-jwt
	
Bootstrap in AngularJS

	Go to https://valor-software.com/ngx-bootstrap/old/3.0.1/#/
		This app used ngx-bootstrap ver 3.0.1
	Use this command to install 3.0.1 version
		npm install ngx-bootstrap@3.0.1 --save

Bootswatch - Free themes for Bootstrap v4.1.1

	Install Bootswatch with the command below:
		npm install bootswatch@4.1.1
	Choose a theme and add them into styles.css file (e.g. pulse)
		@import '../node_modules/bootswatch/dist/pulse/bootstrap.min.css';

Routing

	Why?
		No need to load full page on each client request (faster)

	How? (example)
		1. Generate a file called routes.ts
		2. Add routes based on the number of pages you've got + maybe wildcard page redirecting to index page
		3. go to app.module.ts and add 
			import { RouterModule } from '@angular/router'; on top and
			RouterModule.forRoot(appRoutes) in imports

		4. Add <router-outlet></router-outlet> into app.component.html and delete <app-home></app-home>

Protecting Routes from unauthorised users

	It's called guard

		Create a folder called _guards
			
			Unfortunately, you can't just create guard files directly in VSCode, but Angular CLI provides this service with a command

				cd src/app/_guards
				ng g guard auth --spec=false

		Add AuthGuard into app.module.ts file's providers

How to protect multiple routes with single auth guard

	Refer to routes.ts file
